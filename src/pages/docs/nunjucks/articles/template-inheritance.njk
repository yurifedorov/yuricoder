{% extends "base.njk" %}

{% set file_name   = 'template-inheritance' %}
{% set category    = 'docs' %}
{% set subcategory = 'nunjucks' %}
{% set segment     = 'articles' %}
{% set subsegment  = 'template-inheritance' %}

{% block head %}
  <title>Наследование шаблонов в Nunjucks</title>
  <meta name="description" content="Самая сильная сторона Nunjucks - это возможность создавать шаблоны для каждого отдельно взятого компонента веб-сайта." />
  <link rel="stylesheet" href="{{prism_css}}">
  <script src="{{prism_js}}" async></script>
{% endblock %}

{% block aside_top %}{% include aside_top %}{% endblock %}
{% block aside_left %}{% include aside_left %}{% endblock %}

{% block main %}

  <h1>{{ title | capitalize }}</h1>
  <p>{{ description }}</p>
  <p>Практически любой многостраничный сайт имеет одинаковые части, например: <b>&lt;header&gt;</b>, <b> &lt;footer&gt;</b> и возможно <b>&lt;aside&gt;</b>.</p>
  <p>Без шаблонизаторов изменять 'шапку' или 'футер' ужасно долгое занятие. Для этого придется открыть каждый html документ, найти в нем нужный кусок кода и вставить туда новую инфомацию. Хорошо, если это лендинг или 2-3 страничный сайт - тогда шаблонизатор особо и не нужен.</p>
  <p>Для установки общих для всего сайта блоков можно использовать шаблонизатор <a href="https://mozilla.github.io/nunjucks/">Nunjucks</a>.</p>

  <h2>Базовый шаблон</h2>
  <p>Имеет общий &lt;header&gt;, &lt;footer&gt; и некоторые данные для поисковых систем:</p>

    {% set example_id = 'base_code' %}
    {% set numeration = true  %}
    {% set split      = false %}
    {% set html       = false %}
    {% set njk        = true  %}
    {% set css        = false %}
    {% set js         = false %}
    {% set demo       = false %}
    {% include codeExample %}

  <p>В шаблоне <b>base.njk</b> стандартная HTML-разметка веб-страницы. В &lt;head&gt; подключены общие метаданные, favicon и css.</p>
  
  <h3>Дополнительный 'head'. Зачем он нужен? </h3>
  <p>Иногда надо подключить какой-нибудь скрипт или библиотеку на одну из страниц. Если подключать их в <b>base.njk</b>, то они будут на каждой странице сайта, где они не всегда нужны. Объявив <b>{ % block head % }</b>, все дополнительные ресурсы можно подключить в дочернем шаблоне и после сборки мы получим набор html-страниц содержащий только самое необходимое.</p>

  <h2>Дочерние шаблоны</h2>
  <p>Это любая страница сайта: каталог товаров, контактная информация, статья и т.д. </p>

  <h3>Дочерний шаблон №1 имеет:</h3>
  <ul>
    <li>ссылку на базовый шаблон (extends)</li>
    <li>свой индивидуальный блок head</li>
    <li>уникальный контект</li>
  </ul>

  {% set example_id = 'child-1_code' %}
  {% set numeration = true %}
  {% set split      = false %}
  {% set html       = false %}
  {% set njk        = true %}
  {% set css        = false  %}
  {% set js         = false %}
  {% set demo       = 'child-1_demo.njk'  %}
  {% include codeExample %}

  <h3>Дочерний шаблон №2</h3>
  <p>Имеет то-же набор что и №1, но с другим контентом и возможно другим содержимым в head.</p>
  {% set example_id = 'child-2_code' %}
  {% set numeration = true %}
  {% set split      = false %}
  {% set html       = false %}
  {% set njk        = true %}
  {% set css        = false  %}
  {% set js         = false %}
  {% set demo       = 'child-2_demo.njk'  %}
  {% include codeExample %}
  
  <p><b>Итог:</b> &lt;header&gt; и &lt;footer&gt; сгенерировался из base.njk, а контент из дочерних шаблонов.</p>
  <span class="warning">Сканируя файлы шаблонов, Nunjucks вначале находит родителя. Поэтому тег <b>extends</b> должен быть первым в шаблоне.</span>
  <p>Таким образом, если нужно внести изменения в &lt;header&gt; или &lt;footer&gt; то достаточно внести правки только в <b>base.njk</b>.</p>
  <p>Это хорошее решение, например если размещать сайт на <a href="https://pages.github.com/">GitHub Pages</a>, который не поддерживает PHP.</p>


{% endblock %}